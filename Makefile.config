#Define what flags you want to use for compiling

#TARGET_MPI=1
#TARGET_OMP=1
#TARGET_MIC=1

#PRINTCALLS
#PROFILE
#CUDAPRINT

ifeq ($(TARGET_MIC),)
CXX=nvcc
LD=g++
else
CXX=icpc
LD=icpc
CXXFLAGS=-mmic -x c++
endif

CXXFLAGS += -g -lineinfo -std=c++11
DEFINEFLAGS = -DDUMMY=dummy
OutPutOpt = -o

ifeq ($(CUDALOCATION),)
CUDALOCATION = /usr/local/cuda/
endif

CUDAHEADERS = $(CUDALOCATION)/include
CUDALIBDIR=lib64

# ARMv7 32-bit (Nvidia Jetson TK1)
ifeq ($(shell uname -m),armv7l)
CUDALIBDIR    = lib
endif

INCLUDES += -I$(SRCDIR) -I$(PWD) -I$(CUDAHEADERS) -I$(PWD)/rootstuff 
LIBS += -L$(CUDALOCATION)/$(CUDALIBDIR) -lcudart 

ifeq ($(TARGET_MPI), 1)
DEFINEFLAGS += -DTARGET_MPI
INCLUDES += $(MPI_CXXFLAGS)
LIBS += $(MPI_LIBS)
endif

UNAME=$(shell uname)
ifeq ($(UNAME), Darwin)
CXXFLAGS += -m64
endif

ifneq ($(CUDAPRINT),)
DEFINEFLAGS += -DCUDAPRINT=yes
endif

ifneq ($(PRINTCALLS),)
DEFINEFLAGS += -DPRINTCALLS=yes
endif

ifneq ($(PROFILE),)
DEFINEFLAGS += -DPROFILING=yes
endif

ifeq ($(TARGET_OMP),)
CXXFLAGS += -arch=sm_20
else
DEFINEFLAGS += -fno-inline -DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_BACKEND_OMP -DTARGET_OMP=1
LIBS += -fopenmp
ifeq ($(TARGET_MIC),)
DEFINEFLAGS += -fopenmp
else
DEFINEFLAGS += -openmp
endif
endif


