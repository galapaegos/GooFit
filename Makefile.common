# This makefile should be included at the top of any makefile for GooFit

.SUFFIXES: 

TARGET_MPI=1
#TARGET_OMP=1

ifeq ($(TARGET_OMP),)
CXX=nvcc
LD=g++
else
ifeq ($(TARGET_MIC),)
CXX=g++
CXXFLAGS=-x c++
LD=g++

else
# Intel Xeon Phi/MIC requires using Intel C++ Compiler (ICC)
CXX=icpc
LD=icpc
CXXFLAGS=-mmic -x c++
endif
endif

OVERRIDE_GROUPSIZE=128
OVERRIDE_GRAINSIZE=7

CXXFLAGS += -std=c++11 -g

ifneq ($(TARGET_MPI),)
CXXFLAGS+=$(MPI_CXXFLAGS) -DTARGET_MPI
LDFLAGS+=$(MPI_LIBS)
endif

UNAME=$(shell uname)
ifeq ($(UNAME), Darwin)
CXXFLAGS+=-m64
endif

ifneq ($(CUDAPRINT),)
CXXFLAGS += -DCUDAPRINT=yes
endif 

ifneq ($(PRINTCALLS),)
CXXFLAGS += -DPRINTCALLS=yes
endif 

ifneq ($(PROFILE),)
CXXFLAGS += -DPROFILING=yes
endif 

ifeq ($(TARGET_OMP),)
# nvcc (CUDA)
CXXFLAGS += -DTARGET_SM35 -arch=sm_35 -DMCBOOSTER_BACKEND=CUDA -DOR_GROUPSIZE=$(OVERRIDE_GROUPSIZE) -DOR_GRAINSIZE=$(OVERRIDE_GRAINSIZE)
CXXFLAGS += -DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_CUDA -DTHRUST_HOST_SYSTEM=THRUST_HOST_SYSTEM_OMP
CXXFLAGS += -Xcompiler -fopenmp
LDFLAGS += -lgomp
else
# OpenMP common flags
CXXFLAGS += -fno-inline -DTHRUST_DEVICE_SYSTEM=THRUST_DEVICE_SYSTEM_OMP -DMCBOOSTER_BACKEND=OMP -DTHRUST_HOST_SYSTEM=THRUST_HOST_SYSTEM_OMP 

ifeq ($(TARGET_MIC),)
# GCC/Clang
CXXFLAGS += -fopenmp
LDFLAGS += -fopenmp
else
# Intel C++ Compiler (ICC)
CXXFLAGS += -openmp
endif 
endif

ifeq ($(GOOFITDIR), )
echo "Warning: GOOFITDIR should be set!!! Using cwd"
GOOFITDIR = $(shell /bin/pwd)
endif
SRCDIR = $(GOOFITDIR)/PDFs


ifeq ($(TARGET_OMP), )
ifeq ($(CUDALOCATION), )
CUDALOCATION = /usr/local/cuda
endif
CUDAHEADERS = $(CUDALOCATION)/include
LDFLAGS += -L$(CUDALOCATION)/lib64 -lcudart
INCLUDES += -I$(CUDAHEADERS)
else
ifeq ($(THRUSTLOCATION), )
THRUSTLOCATION = $(GOOFITDIR)/../thrust
endif
THRUSTHEADERS = $(THRUSTLOCATION)
CUDAHEADERS = $(GOOFITDIR)/fakecuda/include
INCLUDES += -I$(THRUSTHEADERS) -I$(CUDAHEADERS)
CXXFLAGS += -DTARGET_OMP
endif


ROOT_INCLUDES = -I$(ROOTSYS)/include
INCLUDES += -I$(SRCDIR) -I$(GOOFITDIR) -I$(GOOFITDIR)/rootstuff -I$(GOOFITDIR)/MCBooster $(ROOT_INCLUDES)

ROOT_LIBS     =  $(shell root-config --libs) -lMinuit
ROOTRIPDIR	= $(GOOFITDIR)/rootstuff
ROOTUTILLIB	= $(ROOTRIPDIR)/libRootUtils.so 
WRKDIR = $(GOOFITDIR)/wrkdir
GOOFITLIBS += -L$(GOOFITDIR)/rootstuff -lRootUtils 

THRUSTO		= $(WRKDIR)/Variable.o $(WRKDIR)/FitManager.o $(WRKDIR)/AllPdfs.o $(WRKDIR)/Faddeeva.o $(WRKDIR)/FitControl.o $(WRKDIR)/PdfBase.o $(WRKDIR)/DataSet.o $(WRKDIR)/BinnedDataSet.o $(WRKDIR)/UnbinnedDataSet.o $(WRKDIR)/FunctorWriter.o 
THRUSTO_B		= wrkdir/Variable.o wrkdir/FitManager.o wrkdir/AllPdfs.o wrkdir/Faddeeva.o wrkdir/FitControl.o wrkdir/PdfBase.o wrkdir/DataSet.o wrkdir/BinnedDataSet.o wrkdir/UnbinnedDataSet.o wrkdir/FunctorWriter.o 
